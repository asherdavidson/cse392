from construct import *

IPv4Address = Sequence(
        BitsInteger(8),
        BitsInteger(8),
        BitsInteger(8),
        BitsInteger(8)
)

MacAddress = Sequence(
        BitsInteger(8),
        BitsInteger(8),
        BitsInteger(8),
        BitsInteger(8),
        BitsInteger(8),
        BitsInteger(8)
)

IPv4_protocols = {
    0: 'HOPOPT',
    1: 'ICMP',
    2: 'IGMP',
    3: 'GGP',
    4: 'IP',
    5: 'ST',
    6: 'TCP',
    7: 'CBT',
    8: 'EGP',
    9: 'IGP',
    10: 'BBN',
    11: 'NVP',
    12: 'PUP',
    13: 'ARGUS',
    14: 'EMCON',
    15: 'XNET',
    16: 'CHAOS',
    17: 'UDP',
    18: 'MUX',
    19: 'DCN',
    20: 'HMP',
    21: 'PRM',
    22: 'XNS',
    23: 'TRUNK',
    24: 'TRUNK',
    25: 'LEAF',
    26: 'LEAF',
    27: 'RDP',
    28: 'IRTP',
    29: 'ISO',
    30: 'NETBLT',
    31: 'MFE',
    32: 'MERIT',
    33: 'DCCP',
    34: 'PC',
    35: 'IDPR',
    36: 'XTP',
    37: 'DDP',
    38: 'IDPR',
    39: 'TP',
    40: 'IL',
    41: 'IPv6',
    42: 'SDRP',
    43: 'IPv6',
    44: 'IPv6',
    45: 'IDRP',
    46: 'RSVP',
    47: 'GREs',
    48: 'DSR',
    49: 'BNA',
    50: 'ESP',
    51: 'AH',
    52: 'I',
    53: 'SWIPE',
    54: 'NARP',
    55: 'MOBILE',
    56: 'TLSP',
    57: 'SKIP',
    58: 'IPv6',
    59: 'IPv6',
    60: 'IPv6',
    61: 'Any host internal protocol',
    62: 'CFTP',
    63: 'Any local network',
    64: 'SAT',
    65: 'KRYPTOLAN',
    66: 'RVD',
    67: 'IPPC',
    68: 'Any distributed file system',
    69: 'SAT',
    70: 'VISA',
    71: 'IPCU',
    72: 'CPNX',
    73: 'CPHB',
    74: 'WSN',
    75: 'PVP',
    76: 'BR',
    77: 'SUN',
    78: 'WB',
    79: 'WB',
    80: 'ISO',
    81: 'VMTP',
    82: 'SECURE',
    83: 'VINES',
    84: 'TTP',
    84: 'IPTM',
    85: 'NSFNET',
    86: 'DGP',
    87: 'TCF',
    88: 'EIGRP',
    89: 'OSPF',
    90: 'Sprite',
    91: 'LARP',
    92: 'MTP',
    93: 'AX',
    94: 'OS',
    95: 'MICP',
    96: 'SCC',
    97: 'ETHERIP',
    98: 'ENCAP',
    99: 'Any private encryption scheme',
    100: 'GMTP',
    101: 'IFMP',
    102: 'PNNI',
    103: 'PIM',
    104: 'ARIS',
    105: 'SCPS',
    106: 'QNX',
    107: 'A',
    108: 'IPComp',
    109: 'SNP',
    110: 'Compaq',
    111: 'IPX',
    112: 'VRRP',
    113: 'PGM',
    114: 'Any 0-hop protocol',
    115: 'L2TP',
    116: 'DDX',
    117: 'IATP',
    118: 'STP',
    119: 'SRP',
    120: 'UTI',
    121: 'SMP',
    122: 'SM',
    123: 'PTP',
    124: 'IS',
    125: 'FIRE',
    126: 'CRTP',
    127: 'CRUDP',
    128: 'SSCOPMCE',
    129: 'IPLT',
    130: 'SPS',
    131: 'PIPE',
    132: 'SCTP',
    133: 'FC',
    134: 'RSVP-E2E-IGNORE',
    135: 'Mobility',
    136: 'UDPLite',
    137: 'MPLS-in-IP',
    138: 'manet',
    139: 'HIP',
    140: 'Shim6',
    141: 'WESP',
    142: 'ROHC',
    255: 'Reserved for extra',
}

dns_type_values = {
    1:  'A',
    2:  'NS',
    3:  'MD',
    4:  'MF',
    5:  'CNAME',
    6:  'SOA',
    7:  'MB',
    8:  'MG',
    9:  'MR',
    10: 'NULL',
    11: 'WKS',
    12: 'PTR',
    13: 'HINFO',
    14: 'MINFO',
    15: 'MX',
    16: 'TXT',
    28: 'AAAA (IPv6)',
    41: 'OPT',
    # QTYPE additional values
    252: 'AXFR',
    253: 'MAILB',
    254: 'MAILA',
    255: '*'
}

dns_class_values = {
    1: 'IN',
    2: 'CS',
    3: 'CH',
    4: 'HS',
    # QCLASS additional values
    255: '*'
}

dns_rcodes = {
    0: 'No Error',
    1: 'Format Error',
    2: 'Server Failure',
    3: 'Name Error',
    4: 'Not implemented',
    5: 'Refused'
}

arp_opcodes = {
    0:	'Reserved',
    1:	'REQUEST',
    2:	'REPLY',
    3:	'request Reverse',
    4:	'reply Reverse',
    5:	'DRARP-Request',
    6:	'DRARP-Reply',
    7:	'DRARP-Error',
    8:	'InARP-Request',
    9:	'InARP-Reply',
    10:	'ARP-NAK',
    11:	'MARS-Request',
    12:	'MARS-Multi',
    13:	'MARS-MServ',
    14:	'MARS-Join',
    15:	'MARS-Leave',
    16:	'MARS-NAK',
    17:	'MARS-Unserv',	
    18:	'MARS-SJoin',
    19:	'MARS-SLeave',
    20:	'MARS-Grouplist-Request',
    21:	'MARS-Grouplist-Reply',
    22:	'MARS-Redirect-Map',
    23:	'MAPOS-UNARP',
    24:	'OP_EXP1',
    25:	'OP_EXP2',
    # 26'-65534	Unassigned
    65535:	'Reserved'
}

arp_hw_types = {
    0:	'Reserved',
    1:	'Ethernet',
    2:	'Experimental Ethernet',
    3:	'Amateur Radio AX.25',
    4:	'Proteon ProNET Token Ring',
    5:	'Chaos',
    6:	'IEEE 802 Networks',
    7:	'ARCNET',
    8:	'Hyperchannel',
    9:	'Lanstar',
    10:	'Autonet Short Address',
    11:	'LocalTalk',
    12:	'LocalNet (IBM PCNet or SYTEK LocalNET)',
    13:	'Ultra link',
    14:	'SMDS',
    15:	'Frame Relay',
    16:	'Asynchronous Transmission Mode (ATM)',
    17:	'HDLC',
    18:	'Fibre Channel',
    19:	'Asynchronous Transmission Mode (ATM)',
    20:	'Serial Line',
    21:	'Asynchronous Transmission Mode (ATM)',
    22:	'MIL-STD-188-220',
    23:	'Metricom',
    24:	'IEEE 1394.1995',
    25:	'MAPOS',
    26:	'Twinaxial',
    27:	'EUI-64',
    28:	'HIPARP',
    29:	'IP and ARP over ISO 7816-3',
    30:	'ARPSec',
    31:	'IPsec tunnel',
    32:	'InfiniBand (TM)',
    33:	'TIA-102 Project 25 Common Air Interface (CAI)',
    34:	'Wiegand Interface',
    35:	'Pure IP',
    36:	'HW_EXP1',
    37:	'HFI',
    # 38-255	Unassigned	
    256:'HW_EXP2',
    257:'AEthernet',
    # 258-65534	Unassigned	
    65535:'Reserved'
}

arp_protocol_types = {
    0x0800:  'IPv4',
    0x0806:  'ARP',
    0x0808:  'Frame Relay ARP',
    0x880B:  'Point-to-Point Tunneling Protocol (PPTP)',
    0x880C:  'General Switch Management Protocol (GSMP)',
    0x8035:  'Reverse Address Resolution Protocol (RARP)',
    0x86DD:  'IPv6',
    0x8847:  'MPLS',
    0x8848:  'MPLS with upstream-assigned label',
    0x8861:  'Multicast Channel Allocation Protocol (MCAP)',
    0x8863:  'PPP over Ethernet (PPPoE) Discovery Stage',
    0x8864:  'PPP over Ethernet (PPPoE) Session Stage',
}
